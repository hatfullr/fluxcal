Roger Hatfull and Jose Luis Nandez
and Jamie!

# StarSmasher Dependencies

There are many dependencies on StarSmasher output currently. More
accurately, each "StarSmasher dependency" is technically a dependency on
the user's data, not just StarSmasher specifically. You can find many of
the lines of code that are dependent on such output by running
```
     grep -ri "StarSmasher specific" *
```
from the main directory.







# User Input

The user will need to provide their own data files to flux_cal. Here is
a list of what they will need to provide. The same list can be found in
`LIST_OF_REQUIRED_DATA`.
```
input file:
n            !number of particles
yscalconst   !Has to do with spectra
fracaccuracy !convergence threshold for grid
runit        !their length units
munit        !their mass units
punit        !their pressure units

data files:
x(i)              !x position
y(i)              !y position
z(i)              !z position
am(i)             !mass
hp(i)             !smoothing length
rho(i)            !density
vx(i)             !x velocity
vy(i)             !y velocity
vz(i)             !z velocity
a(i)              !specific internal energy
wmeanmolecular(i) !mean molecular weight
g(i)              !local g magnitude
z(i)              !metallicity (optical_depth/prepareIntegration.f L77)
T(i)              !temperature
p(i)              !pressure


The user should NOT supply opacity, because opacity is calculated by
flux_cal inside of derivs2.f and getOpacity.f.
```







# Flux Calculator

Good to understand Natasha's code and try to incorporate it
figure out the inputs/outputs

L61 `integrateTau.f` temperature
```
    TpracticalXY(I,J)=10**3.70492d0
```
needs to change to the result from Natasha's code.
This code is basically setting the temperature of each particle to the
"effective" temperature of a 1.52 Msun 2350Myr star.
TpracticalXY is basically `flux = sigma * TpracticalXY**4`.
Need the flux coming out of the LOS from Nata's code to get better
TpracticalXY for L61.

Keep in mind that Natasha's opacity files are different from Jamie's,
so be sure that opacity files don't change between Nata's and
SPLOT/flux_cal. Could possibly just use Natasha's one table instead of
the SPLOT's 2 tables (dust + no dust). Needs to have Ross and Planck

We should just assume ncooling=2 part of the code in derivs2.f (L86)

Use natasha's single star test code
