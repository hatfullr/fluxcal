  ___________________________________________________  
 /         ___  _              ___        _          \ 
 |        | __|| | _  _ __ __ / __| __ _ | |         | 
 |        | _| | || || |\ \ /| (__ / _` || |         | 
 |        |_|  |_| \_,_|/_\_\ \___|\__,_||_|         | 
 \___________________________________________________/ 
 |                                                   | 
 |  FluxCal Copyright (C) 2018. Written by,          | 
 |                                                   | 
 |   Roger Hatfull      [University of Alberta]      | 
 |   Natasha Ivanova    [University of Alberta]      | 
 |   James C. Lombardi  [Allegheny College]          | 
 |                                                   | 
 |  This program comes with ABSOLUTELY NO WARRANTY.  | 
 |  This is free software, and you are welcome to    | 
 |  redistribute it under certain conditions. See    | 
 |  LICENSE file for details, or visit               | 
 |  https://www.gnu.org/licenses                     | 
 \___________________________________________________/ 
 |                   |                                 
 |   Version 0.0.1   |                                 
 \___________________/                                 
                                                       
 ** Initializing **
 Using default baseunits file '../../..//defaults/flux_cal.baseunits'.
 
       gram   = 0.1000E+01   arad        = 0.7566E-14
       sec    = 0.1000E+01   gravconst   = 0.6674E-07
       cm     = 0.1000E+01   pc          = 0.3086E+19
       kelvin = 0.1000E+01   distance    = 0.3086E+20
       erg    = 0.1000E+01   boltz       = 0.1381E-15
       crad   = 0.2998E+11   planck      = 0.6626E-26
       sigma  = 0.5671E-04   
 
       runit  = 0.6960E+11   munit       = 0.1989E+34
       tunit  = 0.1594E+04   vunit       = 0.4368E+08
       Eunit  = 0.3794E+49   rhounit     = 0.5900E+01
       muunit = 0.1000E+01   gunit       = 0.2741E+05
 
 runit_out    = 0.1000E+01   munit_out   = 0.1000E+01
 tunit_out    = 0.1000E+01   vunit_out   = 0.1000E+01
 Eunit_out    = 0.1000E+01   rhounit_out = 0.1000E+01
 muunit_out   = 0.1000E+01   gunit_out   = 0.1000E+01
 tempunit_out = 0.1000E+01   punit_out   = 0.1000E+01
 Lunit_out    = 0.1000E+01   
 
 start  =      0    anglexdeg =  0.000    
 finish =      0    angleydeg =  0.000    
 step   =      0    anglezdeg =  0.000    
 flux_cal_dir = '../../../'
 
 nkernel      =          2
 yscalconst   = 0.6000E-01
 fracaccuracy = 0.1000E-01
 step1        = 0.1000E+01
 step2        = 0.1000E+31
 step3        = 0.1000E+05
 step4        = 0.1000E+16
 taulimit     = 0.1000E+01
 tau_thick    = 0.1000E+02
 envfit       = T
 
 metallicity  = 0.2000E-01
 Rform        = 0.1000E+31
 
 get_fluxes                 = T
 get_particles_at_pos       = F
 get_integration_at_pos     = F
 get_integration_at_all_pos = T
 get_closest_particles      = F
 track_particles            = F
 get_info_of_particle       = F
 rossonly                   = T
 
 eosfile         = 'sph.eos'
 opacityfile     = 'sph.opacities_ferguson_yes_grains_and_molecules'
 opacitydustfile = 'sph.opacities_yes_grains_and_molecules_ncooling2'
 filtersfile     = 'filters.dat'
 outfile         = 'flux_cal.output'
 
 Reading SPH eos file
 Reading opacity file
 Reading opacity file for dust
 Dust model: "normal" silicates; homogeneous spheres
 Reading cold opacity file
 Reading envfit cold opacity file
 Creating envfit density lookup table
 Reading envfit nabla file
 Reading filtersfile
 ** Complete **
 
 ** Main loop **
 Clearing 'flux_cal.output'
 Reading 'fluxcal_0000.dat'
 
 Finding the fluxes at each grid point
 Estabilishing the grid
 Reading pre-existing dimen file 'dimen00000_000_000_000.dat'
 Creating the driving grid
 Creating the integrating grid
 Integrating through each point on the driving grid
 Writing 'teffs00000_000_000_000.dat'
 Calculating the flux at each grid point
 Grid details:
    xminmap,xmaxmap =  -1.92144550736324E+13,   1.25442512992192E+13
    yminmap,ymaxmap =  -1.35222712514892E+13,   1.48583091093395E+13
    hxmap,hymap     =   4.53695805326452E+11,   3.83521356227414E+11
    nxmap,nymap     =                     71,                     75
 
 Total luminosity in enclosed area=  1.05811760399645E+38
 Maximum Teff=  9.72753413801444E+03
 Average Teff=  2.93938810793937E+03
 Writing to output file
 
 Finding data at integration steps at posx,posy
 Reading pre-existing dimen file 'dimen00000_000_000_000.dat'
 Writing to 'int_at_all_pos_0000.dat'
 Integrating through each point on the driving grid
 
 **************************************************
 
 ** Complete **
 
